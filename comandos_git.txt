Comandos mais importantes e úteis do Git para fácil acesso:

$ init
  Inicializa o repositório git

$ add
  Adiciona arquivos modificados ao stage

  > nome_do_arquivo.extensão
    Adiciona um arquivo especifico ao stage

$ commit
  Sobe os arquivos modificados para o repositorio

  > -a
    Comita todos os arquivos passando direto pelo stage

  > -m "_mensagem"
    Adiciona "mensagem" ao commit que aparecerá no log

$ status
  Mostra o status de todos os arquivos no repositorio

$ log
  Mostra todos os commits realizados no repositorio

  > --decorate
    Mostra outras informações no log, como os branches

  > --author="autor"
    Lista apenas os commits do "autor"

  > --graph
    Mostra de forma gráfica os commits e os branches

$ shortlog
  Lista os autores e os commits feitos por eles

  > -sn
    Lista os autores e o número de commits feitos por eles

$ show _hash
  Mostra o que aconteceu no commit que tem a hash passada

$ diff
  Mostra as diferenças entre a versão anterior e atual de todos arquivos modificados

  > --name-only
    Mostra somente o nome do arquivo que foi modificado

$ reset _POINTER _arquivo
  Reseta o pointer passado para a última versão do arquivo

  > --soft _hash
    Reseta os commits até o da hash passada e volta os arquivos para o stage

  > --mixed _hash
    Reseta os commits até o da hash passada e volta os arquivos para unstagged

  > --hard _hash
    Apaga completamente os commits até o da hash passada

$ checkout _arquivo
  Volta o arquivo unstagged pro estado anterior

  > -b "nome do branch"
      Cria um novo branch

$ checkout _branch
  Muda para o branch passado

$ remote
  Comandos do repositório remoto

  > add origin _path
  Adiciona o repositorio remoto de origem no link passado no path

  > -v
  Mostra os repositórios remotos com seus endereços

$ push _destino _fonte
  Sobe os commits para o repositorio remoto destino a partir do branch fonte

  > -u
  Para trackear o repositorio e enviar somente com push da próxima vez

$ branch
  Mostra todos os branchs e qual você está no momento

  > -D "nome do branch"
    Apaga o branch passado

$ merge _branch
  Cria um novo commit juntando o branch passado com o master

$ rebase _branch
  Une o branch passado com o master de forma linear, tornando o último commit do branch
  o mesmo que do master
